# SPDX-FileCopyrightText: 2023-2024 Nextcloud GmbH and Nextcloud contributors
# SPDX-License-Identifier: MIT

name: Integration mariadb

on:
  pull_request:
    paths:
      # Only running on PR for this file to save CI time (otherwise pgsql only)
      - '.github/workflows/integration-mariadb.yml'
  schedule:
    - cron: "5 2 * * *"

permissions:
  contents: read

concurrency:
  group: integration-mariadb-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  changes:
    runs-on: ubuntu-latest-low

    outputs:
      src: ${{ steps.changes.outputs.src}}

    steps:
      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
        id: changes
        continue-on-error: true
        with:
          filters: |
            src:
              - '.github/workflows/**'
              - 'appinfo/**'
              - 'lib/**'
              - 'templates/**'
              - 'tests/integration/**'
              - 'vendor/**'
              - 'vendor-bin/**'
              - '.php-cs-fixer.dist.php'
              - 'composer.json'
              - 'composer.lock'

  integration-mariadb:
    runs-on: ubuntu-latest

    needs: changes
    if: needs.changes.outputs.src != 'false'

    strategy:
      fail-fast: false
      matrix:
        test-suite: ['callapi', 'chat-1', 'chat-2', 'chat-3', 'chat-4', 'command', 'conversation-1', 'conversation-2', 'conversation-3', 'conversation-4', 'conversation-5', 'federation', 'integration', 'sharing-1', 'sharing-2', 'sharing-3', 'sharing-4']
        php-versions: ['8.2']
        server-versions: ['pr/51113']
        guests-versions: ['master']
        circles-versions: ['master']
        notifications-versions: ['master']

    services:
      mariadb:
        image: ghcr.io/nextcloud/continuous-integration-mariadb-10.6:latest
        ports:
          - 4444:3306/tcp
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
        options: --health-cmd="mysqladmin ping" --health-interval 5s --health-timeout 2s --health-retries 10

    steps:
      - name: Set app env
        run: |
          # Split and keep last
          echo "APP_NAME=${GITHUB_REPOSITORY##*/}" >> $GITHUB_ENV

      - name: Checkout server
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
          submodules: true
          repository: nextcloud/server
          ref: ${{ matrix.server-versions }}

      - name: Checkout app
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
          path: apps/${{ env.APP_NAME }}

      - name: Checkout circles app
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
          repository: nextcloud/circles
          path: apps/circles
          ref: ${{ matrix.circles-versions }}

      - name: Checkout guests app
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
          repository: nextcloud/guests
          path: apps/guests
          ref: ${{ matrix.guests-versions }}

      - name: Checkout notifications app
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
          repository: nextcloud/notifications
          path: apps/notifications
          ref: ${{ matrix.notifications-versions }}

      - name: Set up php ${{ matrix.php-versions }}
        uses: shivammathur/setup-php@9e72090525849c5e82e596468b86eb55e9cc5401 # v2.32.0
        with:
          php-version: ${{ matrix.php-versions }}
          # https://docs.nextcloud.com/server/stable/admin_manual/installation/source_installation.html#prerequisites-for-manual-installation
          extensions: apcu, bz2, ctype, curl, dom, fileinfo, gd, iconv, intl, json, libxml, mbstring, openssl, pcntl, posix, session, simplexml, xmlreader, xmlwriter, zip, zlib, mysql, pdo_mysql, sqlite, pdo_sqlite
          coverage: none
          ini-file: development
          # Temporary workaround for missing pcntl_* in PHP 8.3: ini-values: apc.enable_cli=on
          ini-values: apc.enable_cli=on, disable_functions=
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Enable ONLY_FULL_GROUP_BY MariaDB option
        run: |
          echo "SET GLOBAL sql_mode=(SELECT CONCAT(@@sql_mode,',ONLY_FULL_GROUP_BY'));" | mysql -h 127.0.0.1 -P 4444 -u root -prootpassword
          echo 'SELECT @@sql_mode;' | mysql -h 127.0.0.1 -P 4444 -u root -prootpassword

      - name: Set up production dependencies
        working-directory: apps/${{ env.APP_NAME }}
        run: composer i --no-dev

      - name: Set up behat dependencies
        working-directory: apps/${{ env.APP_NAME }}/tests/integration
        run: composer i

      - name: Set up Nextcloud
        env:
          DB_PORT: 4444
        run: |
          mkdir data
          ./occ maintenance:install --verbose --database=mysql --database-name=nextcloud --database-host=127.0.0.1 --database-port=$DB_PORT --database-user=root --database-pass=rootpassword --admin-user admin --admin-pass admin
          ./occ config:system:set debug --value=true --type=boolean
          ./occ config:system:set hashing_default_password --value=true --type=boolean
          ./occ config:system:set memcache.local --value="\\OC\\Memcache\\APCu"
          ./occ config:system:set memcache.distributed --value="\\OC\\Memcache\\APCu"
          ./occ app:enable --force ${{ env.APP_NAME }}
          ./occ app:enable --force circles
          ./occ app:enable --force guests
          ./occ app:enable --force notifications

      - name: Run integration
        working-directory: apps/${{ env.APP_NAME }}/tests/integration
        run: bash run.sh features/${{ matrix.test-suite }}

      - name: Print logs
        if: always()
        run: |
          cat data/nextcloud.log

      - name: Check Federation log
        if: always()
        id: check_federation_log
        uses: andstor/file-existence-action@076e0072799f4942c8bc574a82233e1e4d13e9d6 # v3.0.0
        with:
          files: "data/tests-talk-real-federated-server/data/nextcloud.log"

      - name: Print federation logs
        if: always() && steps.check_federation_log.outputs.files_exists == 'true'
        run: |
          cat data/tests-talk-real-federated-server/data/nextcloud.log

  summary:
    permissions:
      contents: none
    runs-on: ubuntu-latest-low
    needs: [changes, integration-mariadb]

    if: always()

    name: integration-mariadb-summary

    steps:
      - name: Summary status
        run: if ${{ needs.changes.outputs.src != 'false' && needs.integration-mariadb.result != 'success' }}; then exit 1; fi
