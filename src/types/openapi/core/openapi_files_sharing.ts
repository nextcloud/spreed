/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = {
    "/index.php/s/{token}/preview": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get a direct link preview for a shared file */
        get: operations["public_preview-direct-link"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/index.php/apps/files_sharing/publicpreview/{token}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get a preview for a shared file */
        get: operations["public_preview-get-preview"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/index.php/apps/files_sharing/shareinfo": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Get the info about a share */
        post: operations["share_info-info"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ocs/v2.php/apps/files_sharing/api/v1/shares": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get shares of the current user */
        get: operations["shareapi-get-shares"];
        put?: never;
        /** Create a share */
        post: operations["shareapi-create-share"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ocs/v2.php/apps/files_sharing/api/v1/shares/inherited": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all shares relative to a file, including parent folders shares rights */
        get: operations["shareapi-get-inherited-shares"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ocs/v2.php/apps/files_sharing/api/v1/shares/pending": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all shares that are still pending */
        get: operations["shareapi-pending-shares"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ocs/v2.php/apps/files_sharing/api/v1/shares/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get a specific share by id */
        get: operations["shareapi-get-share"];
        /** Update a share */
        put: operations["shareapi-update-share"];
        post?: never;
        /** Delete a share */
        delete: operations["shareapi-delete-share"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ocs/v2.php/apps/files_sharing/api/v1/shares/{id}/send-email": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Send a mail notification again for a share. The mail_send option must be enabled for the given share. */
        post: operations["shareapi-send-share-email"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ocs/v2.php/apps/files_sharing/api/v1/shares/pending/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Accept a share */
        post: operations["shareapi-accept-share"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ocs/v2.php/apps/files_sharing/api/v1/deletedshares": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get a list of all deleted shares */
        get: operations["deleted_shareapi-index"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ocs/v2.php/apps/files_sharing/api/v1/deletedshares/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Undelete a deleted share */
        post: operations["deleted_shareapi-undelete"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ocs/v2.php/apps/files_sharing/api/v1/sharees": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Search for sharees */
        get: operations["shareesapi-search"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ocs/v2.php/apps/files_sharing/api/v1/sharees_recommended": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Find recommended sharees */
        get: operations["shareesapi-find-recommended"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ocs/v2.php/apps/files_sharing/api/v1/remote_shares": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get a list of accepted remote shares */
        get: operations["remote-get-shares"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ocs/v2.php/apps/files_sharing/api/v1/remote_shares/pending": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get list of pending remote shares */
        get: operations["remote-get-open-shares"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ocs/v2.php/apps/files_sharing/api/v1/remote_shares/pending/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Accept a remote share */
        post: operations["remote-accept-share"];
        /** Decline a remote share */
        delete: operations["remote-decline-share"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ocs/v2.php/apps/files_sharing/api/v1/remote_shares/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get info of a remote share */
        get: operations["remote-get-share"];
        put?: never;
        post?: never;
        /** Unshare a remote share */
        delete: operations["remote-unshare"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ocs/v2.php/apps/files_sharing/api/v1/token": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get a unique share token */
        get: operations["shareapi-generate-token"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
};
export type webhooks = Record<string, never>;
export type components = {
    schemas: {
        Capabilities: {
            files_sharing: {
                api_enabled: boolean;
                public: {
                    enabled: boolean;
                    password?: {
                        enforced: boolean;
                        askForOptionalPassword: boolean;
                    };
                    multiple_links?: boolean;
                    expire_date?: {
                        enabled: boolean;
                        /** Format: int64 */
                        days?: number;
                        enforced?: boolean;
                    };
                    expire_date_internal?: {
                        enabled: boolean;
                        /** Format: int64 */
                        days?: number;
                        enforced?: boolean;
                    };
                    expire_date_remote?: {
                        enabled: boolean;
                        /** Format: int64 */
                        days?: number;
                        enforced?: boolean;
                    };
                    send_mail?: boolean;
                    upload?: boolean;
                    upload_files_drop?: boolean;
                    custom_tokens?: boolean;
                };
                user: {
                    send_mail: boolean;
                    expire_date?: {
                        enabled: boolean;
                    };
                };
                resharing: boolean;
                group_sharing?: boolean;
                group?: {
                    enabled: boolean;
                    expire_date?: {
                        enabled: boolean;
                    };
                };
                /** Format: int64 */
                default_permissions?: number;
                federation: {
                    outgoing: boolean;
                    incoming: boolean;
                    expire_date: {
                        enabled: boolean;
                    };
                    expire_date_supported: {
                        enabled: boolean;
                    };
                };
                sharee: {
                    query_lookup_default: boolean;
                    always_show_unique: boolean;
                };
            };
        };
        DeletedShare: {
            id: string;
            /** Format: int64 */
            share_type: number;
            uid_owner: string;
            displayname_owner: string;
            /** Format: int64 */
            permissions: number;
            /** Format: int64 */
            stime: number;
            uid_file_owner: string;
            displayname_file_owner: string;
            path: string;
            item_type: string;
            mimetype: string;
            /** Format: int64 */
            storage: number;
            /** Format: int64 */
            item_source: number;
            /** Format: int64 */
            file_source: number;
            /** Format: int64 */
            file_parent: number;
            /** Format: int64 */
            file_target: number;
            expiration: string | null;
            share_with: string | null;
            share_with_displayname: string | null;
            share_with_link: string | null;
        };
        Lookup: {
            value: string;
            /** Format: int64 */
            verified: number;
        };
        OCSMeta: {
            status: string;
            statuscode: number;
            message?: string;
            totalitems?: string;
            itemsperpage?: string;
        };
        RemoteShare: {
            accepted: boolean;
            /** Format: int64 */
            file_id: number | null;
            /** Format: int64 */
            id: number;
            mimetype: string | null;
            mountpoint: string;
            /** Format: int64 */
            mtime: number | null;
            name: string;
            owner: string;
            /** Format: int64 */
            parent: number | null;
            /** Format: int64 */
            permissions: number | null;
            remote: string;
            remote_id: string;
            share_token: string;
            /** Format: int64 */
            share_type: number;
            type: string | null;
            user: string;
        };
        Share: {
            attributes: string | null;
            can_delete: boolean;
            can_edit: boolean;
            displayname_file_owner: string;
            displayname_owner: string;
            expiration: string | null;
            /** Format: int64 */
            file_parent: number;
            /** Format: int64 */
            file_source: number;
            file_target: string;
            has_preview: boolean;
            /**
             * Format: int64
             * @enum {integer}
             */
            hide_download: 0 | 1;
            is_trusted_server?: boolean;
            "is-mount-root": boolean;
            id: string;
            /** Format: int64 */
            item_mtime: number;
            /** Format: int64 */
            item_permissions?: number;
            item_size: number;
            /** Format: int64 */
            item_source: number;
            /** @enum {string} */
            item_type: "file" | "folder";
            label: string;
            /**
             * Format: int64
             * @enum {integer}
             */
            mail_send: 0 | 1;
            mimetype: string;
            "mount-type": string;
            note: string;
            parent: unknown;
            password?: string | null;
            password_expiration_time?: string | null;
            path: string | null;
            /** Format: int64 */
            permissions: number;
            send_password_by_talk?: boolean;
            /** Format: int64 */
            share_type: number;
            share_with?: string | null;
            share_with_avatar?: string;
            share_with_displayname?: string;
            share_with_displayname_unique?: string | null;
            share_with_link?: string;
            status?: {
                /** Format: int64 */
                clearAt: number | null;
                icon: string | null;
                message: string | null;
                status: string;
            };
            /** Format: int64 */
            stime: number;
            /** Format: int64 */
            storage: number;
            storage_id: string;
            token: string | null;
            uid_file_owner: string;
            uid_owner: string;
            url?: string;
        };
        ShareInfo: {
            /** Format: int64 */
            id: number;
            /** Format: int64 */
            parentId: number;
            /** Format: int64 */
            mtime: number;
            name: string;
            /** Format: int64 */
            permissions: number;
            mimetype: string;
            size: number;
            type: string;
            etag: string;
            children?: {
                [key: string]: Record<string, never>;
            }[];
        };
        Sharee: {
            label: string;
        };
        ShareeCircle: components["schemas"]["Sharee"] & {
            shareWithDescription: string;
            value: components["schemas"]["ShareeValue"] & {
                circle: string;
            };
        };
        ShareeEmail: components["schemas"]["Sharee"] & {
            uuid: string;
            name: string;
            type: string;
            shareWithDisplayNameUnique: string;
            value: components["schemas"]["ShareeValue"];
        };
        ShareeGroup: components["schemas"]["Sharee"] & {
            value: components["schemas"]["ShareeValue"];
        };
        ShareeLookup: components["schemas"]["Sharee"] & {
            extra: {
                federationId: string;
                name: components["schemas"]["Lookup"];
                email: components["schemas"]["Lookup"];
                address: components["schemas"]["Lookup"];
                website: components["schemas"]["Lookup"];
                twitter: components["schemas"]["Lookup"];
                phone: components["schemas"]["Lookup"];
                twitter_signature: components["schemas"]["Lookup"];
                website_signature: components["schemas"]["Lookup"];
                userid: components["schemas"]["Lookup"];
            };
            value: components["schemas"]["ShareeValue"] & {
                globalScale: boolean;
            };
        };
        ShareeRemote: components["schemas"]["Sharee"] & {
            uuid: string;
            name: string;
            type: string;
            value: components["schemas"]["ShareeValue"] & {
                server: string;
            };
        };
        ShareeRemoteGroup: components["schemas"]["Sharee"] & {
            guid: string;
            name: string;
            value: components["schemas"]["ShareeValue"] & {
                server: string;
            };
        };
        ShareeRoom: components["schemas"]["Sharee"] & {
            value: components["schemas"]["ShareeValue"];
        };
        ShareeUser: components["schemas"]["Sharee"] & {
            subline: string;
            icon: string;
            shareWithDisplayNameUnique: string;
            status: {
                status: string;
                message: string;
                icon: string;
                /** Format: int64 */
                clearAt: number | null;
            };
            value: components["schemas"]["ShareeValue"];
        };
        ShareeValue: {
            /** Format: int64 */
            shareType: number;
            shareWith: string;
        };
        ShareesRecommendedResult: {
            exact: {
                emails: components["schemas"]["ShareeEmail"][];
                groups: components["schemas"]["ShareeGroup"][];
                remote_groups: components["schemas"]["ShareeRemoteGroup"][];
                remotes: components["schemas"]["ShareeRemote"][];
                users: components["schemas"]["ShareeUser"][];
            };
            emails: components["schemas"]["ShareeEmail"][];
            groups: components["schemas"]["ShareeGroup"][];
            remote_groups: components["schemas"]["ShareeRemoteGroup"][];
            remotes: components["schemas"]["ShareeRemote"][];
            users: components["schemas"]["ShareeUser"][];
        };
        ShareesSearchResult: {
            exact: {
                circles: components["schemas"]["ShareeCircle"][];
                emails: components["schemas"]["ShareeEmail"][];
                groups: components["schemas"]["ShareeGroup"][];
                remote_groups: components["schemas"]["ShareeRemoteGroup"][];
                remotes: components["schemas"]["ShareeRemote"][];
                rooms: components["schemas"]["ShareeRoom"][];
                users: components["schemas"]["ShareeUser"][];
            };
            circles: components["schemas"]["ShareeCircle"][];
            emails: components["schemas"]["ShareeEmail"][];
            groups: components["schemas"]["ShareeGroup"][];
            lookup: components["schemas"]["ShareeLookup"][];
            remote_groups: components["schemas"]["ShareeRemoteGroup"][];
            remotes: components["schemas"]["ShareeRemote"][];
            rooms: components["schemas"]["ShareeRoom"][];
            users: components["schemas"]["ShareeUser"][];
            lookupEnabled: boolean;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
};
export type $defs = Record<string, never>;
export interface operations {
    "public_preview-direct-link": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Token of the share */
                token: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Preview returned */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": string;
                };
            };
            /** @description Getting preview is not possible */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Getting preview is not allowed */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Share or preview not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    "public_preview-get-preview": {
        parameters: {
            query?: {
                /** @description File in the share */
                file?: string;
                /** @description Width of the preview */
                x?: number;
                /** @description Height of the preview */
                y?: number;
                /** @description Whether to not crop the preview */
                a?: 0 | 1;
                /** @description Whether to fallback to the mime icon if no preview is available */
                mimeFallback?: 0 | 1;
            };
            header?: never;
            path: {
                /** @description Token of the share */
                token: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Preview returned */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": string;
                };
            };
            /** @description Redirect to the mime icon url if mimeFallback is true */
            303: {
                headers: {
                    Location?: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Getting preview is not possible */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Getting preview is not allowed */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Share or preview not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    "share_info-info": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description Token of the share */
                    t: string;
                    /** @description Password of the share */
                    password?: string | null;
                    /** @description Subdirectory to get info about */
                    dir?: string | null;
                    /**
                     * Format: int64
                     * @description Maximum depth to get info about
                     * @default -1
                     */
                    depth?: number;
                };
            };
        };
        responses: {
            /** @description Share info returned */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ShareInfo"];
                };
            };
            /** @description Getting share info is not allowed */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Share not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    "shareapi-get-shares": {
        parameters: {
            query?: {
                /** @description Only get shares with the current user */
                shared_with_me?: string;
                /** @description Only get shares by the current user and reshares */
                reshares?: string;
                /** @description Only get all shares in a folder */
                subfiles?: string;
                /** @description Get shares for a specific path */
                path?: string;
                /** @description Include tags in the share */
                include_tags?: string;
            };
            header: {
                /** @description Required to be true for the API request to pass */
                "OCS-APIRequest": boolean;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Shares returned */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: components["schemas"]["Share"][];
                        };
                    };
                };
            };
            /** @description The folder was not found or is inaccessible */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
        };
    };
    "shareapi-create-share": {
        parameters: {
            query?: never;
            header: {
                /** @description Required to be true for the API request to pass */
                "OCS-APIRequest": boolean;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    /** @description Path of the share */
                    path?: string | null;
                    /**
                     * Format: int64
                     * @description Permissions for the share
                     */
                    permissions?: number | null;
                    /**
                     * Format: int64
                     * @description Type of the share
                     * @default -1
                     */
                    shareType?: number;
                    /** @description The entity this should be shared with */
                    shareWith?: string | null;
                    /**
                     * @description If public uploading is allowed (deprecated)
                     * @enum {string|null}
                     */
                    publicUpload?: "true" | "false" | null;
                    /**
                     * @description Password for the share
                     * @default
                     */
                    password?: string;
                    /** @description Send the password for the share over Talk */
                    sendPasswordByTalk?: string | null;
                    /** @description The expiry date of the share in the user's timezone at 00:00. If $expireDate is not supplied or set to `null`, the system default will be used. */
                    expireDate?: string | null;
                    /**
                     * @description Note for the share
                     * @default
                     */
                    note?: string;
                    /**
                     * @description Label for the share (only used in link and email)
                     * @default
                     */
                    label?: string;
                    /** @description Additional attributes for the share */
                    attributes?: string | null;
                    /**
                     * @description Send a mail to the recipient
                     * @enum {string|null}
                     */
                    sendMail?: "false" | "true" | null;
                };
            };
        };
        responses: {
            /** @description Share created */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: components["schemas"]["Share"];
                        };
                    };
                };
            };
            /** @description Unknown share type */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
            /** @description Creating the share is not allowed */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
            /** @description Creating the share failed */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
        };
    };
    "shareapi-get-inherited-shares": {
        parameters: {
            query: {
                /** @description Path all shares will be relative to */
                path: string;
            };
            header: {
                /** @description Required to be true for the API request to pass */
                "OCS-APIRequest": boolean;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Shares returned */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: components["schemas"]["Share"][];
                        };
                    };
                };
            };
            /** @description The given path is invalid */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/plain": string;
                };
            };
        };
    };
    "shareapi-pending-shares": {
        parameters: {
            query?: never;
            header: {
                /** @description Required to be true for the API request to pass */
                "OCS-APIRequest": boolean;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Pending shares returned */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: components["schemas"]["Share"][];
                        };
                    };
                };
            };
        };
    };
    "shareapi-get-share": {
        parameters: {
            query?: {
                /** @description Include tags in the share */
                include_tags?: 0 | 1;
            };
            header: {
                /** @description Required to be true for the API request to pass */
                "OCS-APIRequest": boolean;
            };
            path: {
                /** @description ID of the share */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Share returned */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: components["schemas"]["Share"][];
                        };
                    };
                };
            };
            /** @description Share not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
        };
    };
    "shareapi-update-share": {
        parameters: {
            query?: never;
            header: {
                /** @description Required to be true for the API request to pass */
                "OCS-APIRequest": boolean;
            };
            path: {
                /** @description ID of the share */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    /**
                     * Format: int64
                     * @description New permissions
                     */
                    permissions?: number | null;
                    /** @description New password */
                    password?: string | null;
                    /** @description New condition if the password should be send over Talk */
                    sendPasswordByTalk?: string | null;
                    /** @description New condition if public uploading is allowed */
                    publicUpload?: string | null;
                    /** @description New expiry date */
                    expireDate?: string | null;
                    /** @description New note */
                    note?: string | null;
                    /** @description New label */
                    label?: string | null;
                    /** @description New condition if the download should be hidden */
                    hideDownload?: string | null;
                    /** @description New additional attributes */
                    attributes?: string | null;
                    /** @description if the share should be send by mail. Considering the share already exists, no mail will be send after the share is updated. You will have to use the sendMail action to send the mail. */
                    sendMail?: string | null;
                    /** @description New token */
                    token?: string | null;
                };
            };
        };
        responses: {
            /** @description Share updated successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: components["schemas"]["Share"];
                        };
                    };
                };
            };
            /** @description Share could not be updated because the requested changes are invalid */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
            /** @description Missing permissions to update the share */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
            /** @description Share not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
        };
    };
    "shareapi-delete-share": {
        parameters: {
            query?: never;
            header: {
                /** @description Required to be true for the API request to pass */
                "OCS-APIRequest": boolean;
            };
            path: {
                /** @description ID of the share */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Share deleted successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
            /** @description Missing permissions to delete the share */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
            /** @description Share not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
        };
    };
    "shareapi-send-share-email": {
        parameters: {
            query?: never;
            header: {
                /** @description Required to be true for the API request to pass */
                "OCS-APIRequest": boolean;
            };
            path: {
                /** @description the share ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    /**
                     * @description the password to check against. Necessary for password protected shares.
                     * @default
                     */
                    password?: string;
                };
            };
        };
        responses: {
            /** @description The email notification was sent successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
            /** @description Invalid request or wrong password */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
            /** @description You are not allowed to send mail notifications */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
            /** @description Share not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
        };
    };
    "shareapi-accept-share": {
        parameters: {
            query?: never;
            header: {
                /** @description Required to be true for the API request to pass */
                "OCS-APIRequest": boolean;
            };
            path: {
                /** @description ID of the share */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Share accepted successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
            /** @description Share could not be accepted */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
            /** @description Share not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
        };
    };
    "deleted_shareapi-index": {
        parameters: {
            query?: never;
            header: {
                /** @description Required to be true for the API request to pass */
                "OCS-APIRequest": boolean;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Deleted shares returned */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: components["schemas"]["DeletedShare"][];
                        };
                    };
                };
            };
        };
    };
    "deleted_shareapi-undelete": {
        parameters: {
            query?: never;
            header: {
                /** @description Required to be true for the API request to pass */
                "OCS-APIRequest": boolean;
            };
            path: {
                /** @description ID of the share */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Share undeleted successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
            /** @description Share not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
        };
    };
    "shareesapi-search": {
        parameters: {
            query?: {
                /** @description Text to search for */
                search?: string;
                /** @description Limit to specific item types */
                itemType?: string | null;
                /** @description Page offset for searching */
                page?: number;
                /** @description Limit amount of search results per page */
                perPage?: number;
                /** @description Limit to specific share types */
                shareType?: (number | number[]) | null;
                /** @description If a global lookup should be performed too */
                lookup?: 0 | 1;
            };
            header: {
                /** @description Required to be true for the API request to pass */
                "OCS-APIRequest": boolean;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Sharees search result returned */
            200: {
                headers: {
                    Link?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: components["schemas"]["ShareesSearchResult"];
                        };
                    };
                };
            };
            /** @description Invalid search parameters */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
        };
    };
    "shareesapi-find-recommended": {
        parameters: {
            query: {
                /** @description Limit to specific item types */
                itemType: string;
                /** @description Limit to specific share types */
                shareType?: (number | number[]) | null;
            };
            header: {
                /** @description Required to be true for the API request to pass */
                "OCS-APIRequest": boolean;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Recommended sharees returned */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: components["schemas"]["ShareesRecommendedResult"];
                        };
                    };
                };
            };
        };
    };
    "remote-get-shares": {
        parameters: {
            query?: never;
            header: {
                /** @description Required to be true for the API request to pass */
                "OCS-APIRequest": boolean;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Accepted remote shares returned */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: components["schemas"]["RemoteShare"][];
                        };
                    };
                };
            };
        };
    };
    "remote-get-open-shares": {
        parameters: {
            query?: never;
            header: {
                /** @description Required to be true for the API request to pass */
                "OCS-APIRequest": boolean;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Pending remote shares returned */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: components["schemas"]["RemoteShare"][];
                        };
                    };
                };
            };
        };
    };
    "remote-accept-share": {
        parameters: {
            query?: never;
            header: {
                /** @description Required to be true for the API request to pass */
                "OCS-APIRequest": boolean;
            };
            path: {
                /** @description ID of the share */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Share accepted successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
            /** @description Share not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
        };
    };
    "remote-decline-share": {
        parameters: {
            query?: never;
            header: {
                /** @description Required to be true for the API request to pass */
                "OCS-APIRequest": boolean;
            };
            path: {
                /** @description ID of the share */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Share declined successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
            /** @description Share not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
        };
    };
    "remote-get-share": {
        parameters: {
            query?: never;
            header: {
                /** @description Required to be true for the API request to pass */
                "OCS-APIRequest": boolean;
            };
            path: {
                /** @description ID of the share */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Share returned */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: components["schemas"]["RemoteShare"];
                        };
                    };
                };
            };
            /** @description Share not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
        };
    };
    "remote-unshare": {
        parameters: {
            query?: never;
            header: {
                /** @description Required to be true for the API request to pass */
                "OCS-APIRequest": boolean;
            };
            path: {
                /** @description ID of the share */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Share unshared successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
            /** @description Unsharing is not possible */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
            /** @description Share not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
        };
    };
    "shareapi-generate-token": {
        parameters: {
            query?: never;
            header: {
                /** @description Required to be true for the API request to pass */
                "OCS-APIRequest": boolean;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Token generated successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: {
                                token: string;
                            };
                        };
                    };
                };
            };
        };
    };
}
